@page "/"
@using BlazingTrails.Client.Features.Shared
@using BlazingTrails.ComponentLibrary.Map
@inject IMediator Mediator
@inject NavigationManager NavigationManager

<PageTitle>Blazing Trails</PageTitle>

@if (_trails is null)
{
    <p>Loading trails...</p>
}
else
{
    <TrailDetails Trail="_selectedTrail"/>

    <TrailSearch/>

    @if (_trails.Any())
    {
        <div class="mb-4">
            <p class="font-italic text-center">Do you have an awesome trail you'd like to share? <a href="addTrail">Add it here</a>.</p>
        </div>

        <ViewSwitcher Items="_trails" Context="trail">
            <GridTemplate>
                <TrailCard Trail="trail" OnSelected="HandleTrailSelected"/>
            </GridTemplate>
            <HeaderTemplate>
                <th>Name</th>
                <th>Location</th>
                <th>Length</th>
                <th>Time</th>
                <th></th>
            </HeaderTemplate>
            <RowTemplate>
                <th scope="col">@trail.Name</th>
                <td>@trail.Location</td>
                <td>@(trail.Length) km</td>
                <td>@trail.TimeFormatted</td>
                <td class="text-end">
                    <button @onclick="@(() => NavigationManager.NavigateTo($"/editTrail/{trail.Id}"))" title="Edit" class="btn btn-outline-secondary">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <FavoriteButton Trail="trail"/>
                    <button @onclick="@(() => HandleTrailSelected(trail))" title="View" class="btn btn-primary">
                        <i class="bi bi-binoculars"></i>
                    </button>
                </td>
            </RowTemplate>
        </ViewSwitcher>
    }
    else
    {
        <NoTrails>
            We currently don't have any trails, <a href="addTrail">why not add one?</a>
        </NoTrails>
    }
}

@code {
    private IEnumerable<Trail>? _trails;
    private Trail? _selectedTrail;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Mediator.Send(new GetTrailsRequest());

            _trails = response.Trails.Select(trail => new Trail
            {
                Id = trail.Id,
                Name = trail.Name,
                Image = trail.Image ?? string.Empty,
                Description = trail.Description,
                Location = trail.Location,
                Length = trail.Length,
                TimeInMinutes = trail.TimeInMinutes,
                Waypoints = trail.Waypoints.Select(waypoint => new LatLong(waypoint.Latitude, waypoint.Longitude)).ToList()
            });
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading trail data: {ex.Message}");
        }
    }

    private void HandleTrailSelected(Trail trail) =>
        _selectedTrail = trail;


}
